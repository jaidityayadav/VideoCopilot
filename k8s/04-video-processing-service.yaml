apiVersion: apps/v1
kind: Deployment
metadata:
  name: video-processing-service
  namespace: videocopilot
  labels:
    app: video-processing-service
    component: backend
spec:
  replicas: 1  # CPU-intensive, single replica for now
  selector:
    matchLabels:
      app: video-processing-service
  template:
    metadata:
      labels:
        app: video-processing-service
        component: backend
    spec:
      containers:
      - name: video-processing-service
        image: ghcr.io/jaidityayadav/VideoCopilot/video-processing-service:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: videocopilot-secrets
              key: database-url
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: videocopilot-secrets
              key: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: videocopilot-secrets
              key: aws-secret-access-key
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: videocopilot-config
              key: aws-region
        - name: AWS_S3_BUCKET
          valueFrom:
            configMapKeyRef:
              name: videocopilot-config
              key: aws-s3-bucket
        - name: HOST
          valueFrom:
            configMapKeyRef:
              name: videocopilot-config
              key: video-host
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: videocopilot-config
              key: video-port
        - name: EMBEDDING_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: videocopilot-config
              key: embedding-service-url
        - name: WORKERS
          valueFrom:
            configMapKeyRef:
              name: videocopilot-config
              key: video-workers
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: videocopilot-config
              key: video-log-level
        - name: WHISPER_MODEL
          valueFrom:
            configMapKeyRef:
              name: videocopilot-config
              key: whisper-model
        - name: SUPPORTED_FORMATS
          valueFrom:
            configMapKeyRef:
              name: videocopilot-config
              key: supported-formats
        - name: MAX_FILE_SIZE
          valueFrom:
            configMapKeyRef:
              name: videocopilot-config
              key: max-file-size
        - name: PROCESSING_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: videocopilot-config
              key: processing-timeout
        - name: TRANSLATION_LANGUAGES
          valueFrom:
            configMapKeyRef:
              name: videocopilot-config
              key: translation-languages
        - name: DEFAULT_LANGUAGE
          valueFrom:
            configMapKeyRef:
              name: videocopilot-config
              key: default-language
        - name: CHUNK_SIZE
          valueFrom:
            configMapKeyRef:
              name: videocopilot-config
              key: chunk-size
        - name: CHUNK_OVERLAP
          valueFrom:
            configMapKeyRef:
              name: videocopilot-config
              key: chunk-overlap
        volumeMounts:
        - name: uploads-storage
          mountPath: /app/uploads
        - name: temp-storage
          mountPath: /app/temp
        - name: models-storage
          mountPath: /app/models
        - name: logs-storage
          mountPath: /app/logs
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 120
          periodSeconds: 60
          timeoutSeconds: 30
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
      volumes:
      - name: uploads-storage
        persistentVolumeClaim:
          claimName: video-uploads-pvc
      - name: temp-storage
        persistentVolumeClaim:
          claimName: video-temp-pvc
      - name: models-storage
        persistentVolumeClaim:
          claimName: video-models-pvc
      - name: logs-storage
        persistentVolumeClaim:
          claimName: video-logs-pvc
      imagePullSecrets:
      - name: docker-registry-secret
---
apiVersion: v1
kind: Service
metadata:
  name: video-processing-service
  namespace: videocopilot
  labels:
    app: video-processing-service
    component: backend
spec:
  selector:
    app: video-processing-service
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: video-uploads-pvc
  namespace: videocopilot
  labels:
    app: video-processing-service
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: video-temp-pvc
  namespace: videocopilot
  labels:
    app: video-processing-service
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: video-models-pvc
  namespace: videocopilot
  labels:
    app: video-processing-service
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: video-logs-pvc
  namespace: videocopilot
  labels:
    app: video-processing-service
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: local-path