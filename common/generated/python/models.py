"""
Generated Pydantic models from Prisma schema
This file is automatically generated - do not edit manually
Generated at: 2025-10-01T22:48:04.777Z
"""

from datetime import datetime
from enum import Enum
from typing import Optional, List, Dict, Any
from pydantic import BaseModel, Field

# You'll need to implement cuid() function or use uuid4
def cuid():
    import uuid
    return str(uuid.uuid4())


class Status(str, Enum):
    PENDING = "PENDING"
    PROCESSING = "PROCESSING"
    COMPLETED = "COMPLETED"


class VideoStatus(str, Enum):
    PENDING = "PENDING"
    PROCESSING = "PROCESSING"
    DONE = "DONE"



class User(BaseModel):
    id: str
    name: str
    email: str
    password: str
    createdAt: datetime
    projects: Project
    
    class Config:
        from_attributes = True
        json_encoders = {
            datetime: lambda v: v.isoformat() if v else None
        }


class Project(BaseModel):
    id: str
    name: str
    thumbnail: Optional[str] = None
    totalVideos: int = 0
    processedVideos: int = 0
    status: Status = Status.PENDING
    createdAt: datetime
    ownerId: str
    videos: Video
    embeddings: Optional[Embedding] = None
    
    class Config:
        from_attributes = True
        json_encoders = {
            datetime: lambda v: v.isoformat() if v else None
        }


class Video(BaseModel):
    id: str
    s3Key: str
    status: VideoStatus = VideoStatus.PENDING
    createdAt: datetime
    projectId: str
    transcripts: Transcript
    
    class Config:
        from_attributes = True
        json_encoders = {
            datetime: lambda v: v.isoformat() if v else None
        }


class Transcript(BaseModel):
    id: str
    language: str
    srtUrl: str
    videoId: str
    createdAt: datetime
    
    class Config:
        from_attributes = True
        json_encoders = {
            datetime: lambda v: v.isoformat() if v else None
        }


class Embedding(BaseModel):
    id: str
    pineconeId: str
    createdAt: datetime
    projectId: str
    
    class Config:
        from_attributes = True
        json_encoders = {
            datetime: lambda v: v.isoformat() if v else None
        }


# Export all models
__all__ = [
    "User",
    "Project", 
    "Video",
    "Transcript",
    "Embedding",
    "Status",
    "VideoStatus"
]